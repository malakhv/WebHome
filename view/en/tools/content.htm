<h2>Notepad</h2>

<p>
    This is a simple notepad without text formatting (will be added later) and
    with spell check feature. Notepad doesn't send the entered text anywhere,
    but only saves it in a secure local storage.
</p>

<script>

    const VIEW_ID_EDITOR = 'webpad-editor';
    const VIEW_ID_FORMAT = 'webpad-format';

    var VEditor;
    var VFormat;

    function saveData() {
      var data = VEditor.innerHTML;
      localStorage.setItem(VEditor.id, data);
      console.log('WebPad - saveData');
    }

    function loadData() {
        var data = localStorage.getItem(VEditor.id);
        if (data) {
            VEditor.innerHTML = data;
        }
        console.log('WebPad - loadData');
    }
    
    function clearData() {
        if (confirm('Are you sure you want to clear text?')) {
            document.getElementById("note").value = "";
            saveData();
        }
        console.log('WebPad - clearData');
    }

    function downloadNote() {
        var note = document.getElementById("noteNew").value;
        var link = document.createElement("a");
        link.download = "my-note.txt";
        var data = new Blob([note], {
            type: "text/plain"
        });
        link.href = window.URL.createObjectURL(data);
        link.click();
        link.remove();
    }

    function downloadNoteNew() {
        var note = document.getElementById("noteNew");
        var format = document.getElementById("format").value;
        var content = '';
        var mime = 'plain';
        
        if (format == 'rtf' || format == 'htm') {
            content = note.innerHTML;
            mime = 'html';
            if (format == 'rtf') {
                content = convertHtmlToRtf(content);
                mime = 'rtf';
            }
        } else {
            content = note.outerText;
            content = content.replace(/\n\n/g, '\n');
        }
        
        var link = document.createElement("a");
        link.download = "my-note." + format;
        var data = new Blob([content], {
            type: "text/" + mime
        });
        link.href = window.URL.createObjectURL(data);
        link.click();
        link.remove();
    }

    function insertDate() {
        var n = new Date();
        var m = n.getMonth();
        var d = n.getDate();
        var h = n.getHours();
        if (d < 10) d = '0' + d;
        if (m < 10) m = '0' + m;
        if (h < 10) h = '0' + h;
        var text = '[' + d + '.' + m + '.' + n.getFullYear() + ' - ';
        m = n.getMinutes();
        if (m < 10) m = '0' + m;
        text += h + ':' + m + ']';
        document.execCommand('insertText', false, text);
    }

    function formatText() {
        var content = document.getElementById("note");
        //content.style.fontStyle = "italic";
        content.html("<b>Bold<b> text");
    }

    window.onload = function winLoad() {
        VEditor = document.getElementById(VIEW_ID_EDITOR);
        VFormat = document.getElementById(VIEW_ID_FORMAT);
        loadData();
    };

    window.onchange = function winChange() {
        saveData();
    };

    window.onclose = function winClose() {
        saveData();
    }

    window.onbeforeunload = function winBeforeUnload() {
        saveData();
    }

    function convertHtmlToRtf(html) {
  if (!(typeof html === "string" && html)) {
      return null;
  }
  var tmpRichText, hasHyperlinks;
  var richText = html;
  // Singleton tags
  richText = richText.replace(/<(?:hr)(?:\s+[^>]*)?\s*[\/]?>/ig, "{\\pard \\brdrb \\brdrs \\brdrw10 \\brsp20 \\par}\n{\\pard\\par}\n");
  richText = richText.replace(/<(?:br)(?:\s+[^>]*)?\s*[\/]?>/ig, "{\\pard\\par}\n");
  // Empty tags
  richText = richText.replace(/<(?:p|div|section|article)(?:\s+[^>]*)?\s*[\/]>/ig, "{\\pard\\par}\n");
  richText = richText.replace(/<(?:[^>]+)\/>/g, "");
  // Hyperlinks
  richText = richText.replace(
      /<a(?:\s+[^>]*)?(?:\s+href=(["'])(?:javascript:void\(0?\);?|#|return false;?|void\(0?\);?|)\1)(?:\s+[^>]*)?>/ig,
      "{{{\n");
  tmpRichText = richText;
  richText = richText.replace(
      /<a(?:\s+[^>]*)?(?:\s+href=(["'])(.+)\1)(?:\s+[^>]*)?>/ig,
      "{\\field{\\*\\fldinst{HYPERLINK\n \"$2\"\n}}{\\fldrslt{\\ul\\cf1\n");
  hasHyperlinks = richText !== tmpRichText;
  richText = richText.replace(/<a(?:\s+[^>]*)?>/ig, "{{{\n");
  richText = richText.replace(/<\/a(?:\s+[^>]*)?>/ig, "\n}}}");
  // Start tags
  richText = richText.replace(/<(?:b|strong)(?:\s+[^>]*)?>/ig, "{\\b\n");
  richText = richText.replace(/<(?:i|em)(?:\s+[^>]*)?>/ig, "{\\i\n");
  richText = richText.replace(/<(?:u|ins)(?:\s+[^>]*)?>/ig, "{\\ul\n");
  richText = richText.replace(/<(?:strike|del)(?:\s+[^>]*)?>/ig, "{\\strike\n");
  richText = richText.replace(/<sup(?:\s+[^>]*)?>/ig, "{\\super\n");
  richText = richText.replace(/<sub(?:\s+[^>]*)?>/ig, "{\\sub\n");
  richText = richText.replace(/<(?:p|div|section|article)(?:\s+[^>]*)?>/ig, "{\\pard\n");
  // End tags
  richText = richText.replace(/<\/(?:p|div|section|article)(?:\s+[^>]*)?>/ig, "\n\\par}\n");
  richText = richText.replace(/<\/(?:b|strong|i|em|u|ins|strike|del|sup|sub)(?:\s+[^>]*)?>/ig, "\n}");
  // Strip any other remaining HTML tags [but leave their contents]
  richText = richText.replace(/<(?:[^>]+)>/g, "");
  // Prefix and suffix the rich text with the necessary syntax
  richText =
      "{\\rtf1\\ansi\n" + (hasHyperlinks ? "{\\colortbl\n;\n\\red0\\green0\\blue255;\n}\n" : "") + richText +  "\n}";
  return richText;
}

</script>

<!-- rows="15" cols="104" -->
<textarea id="note" spellcheck="true" hidden="true" rows="15" oninput="render()" 
    placeholder="Put your text here..."></textarea>

<table align="right" hidden="true">
    <tr>
       <td>
            <button onclick="clearData()">Clear</button>
            <button onclick="formatText()">Format</button>
            <button onclick="downloadNoteNew()">Download</button>
       </td>
    </tr>
</table>

<!-- Controls -->
<table class="controls" border="0"><tr>
<td align="left">
    <!-- Text format (bold, italic, underline) -->
    <button onclick="document.execCommand('bold');"><b>B</b></button>
    <button onclick="document.execCommand('italic');"><i>I</i></button>
    <button onclick="document.execCommand('underline');"><u>U</u></button>
    &nbsp;
    <!-- Headers -->
    <button onclick="document.execCommand('heading', false, 'H1');">H1</button>
    <button onclick="document.execCommand('heading', false, 'H2');">H2</button>
    <button onclick="document.execCommand('heading', false, 'H3');">H3</button>
    <button onclick="saveNote();">Save</button>
    &nbsp;
    <!-- Font size -->
    <button onclick="document.execCommand('decreaseFontSize');">A</button>
    <button onclick="document.execCommand('decreaseFontSize');"><span>A</span></button>
    &nbsp;
    <!-- Insert any stuff -->
    <button onclick="insertDate()">Now</button>
</td>
<td align="right">
    <!-- Clear data -->
    <button onclick="clearData()">Clear</button>
</td></tr></table>

<!-- VEditor -->
<div class="editable" contenteditable="true" spellcheck="true"
    id="webpad-editor" placeholder="Put your text here...">
</div>

<!-- Controls -->
<table align="right" border="0"><tr><td>
    <!-- VFormat -->
    <select title="Format" name="webpad-format" id="webpad-format">
        <option value="txt">Plain text</option>
        <option value="rtf">Rich text</option>
        <option value="md">Markdown</option>
        <option value="htm">HTML markup</option>
    </select>&nbsp;
    <!-- Download -->
    <button onclick="downloadNoteNew();">Download</button>
</td></tr></table>

&nbsp;<br>&nbsp;<br>
